var Retool;
(function (Retool) {
    function UnauthorizedError(message) {
        var error = new Error();
        this.message = message;
        this.stack = error.stack;
        this.code = 401;
        this.type = this.name;
    }
    UnauthorizedError.prototype = Object.create(Error.prototype);
    UnauthorizedError.prototype.name = 'UnauthorizedError';
    var GhostAuthorizationManager = (function () {
        function GhostAuthorizationManager(options) {
            this.defaultWait = 10000;
            options = options || {};
            this.baseURL = options.apiBaseURL;
            this.onError = options.onError;
            if (this.baseURL[this.baseURL.length - 1] !== "/") {
                this.baseURL += "/";
            }
        }
        GhostAuthorizationManager.prototype.getAuthInfo = function () {
            var json = localStorage.getItem('ghost:session'), auth;
            if (json) {
                try {
                    auth = JSON.parse(json);
                    return auth;
                }
                catch (err) {
                    console.error("Error parsing ghost:session:" + err);
                }
            }
        };
        GhostAuthorizationManager.prototype.refreshToken = function (done) {
            console.log('refreshing');
            var auth = this.getAuthInfo();
            if (!auth) {
                var error = new UnauthorizedError("Not logged in");
                done(error);
                return;
            }
            console.log('refreshing with token ' + auth.refresh_token);
            $.ajax({
                url: this.baseURL + 'authentication/token',
                method: 'POST',
                dataType: 'json',
                contentType: 'application/x-www-form-urlencoded',
                data: "client_id=ghost-admin&grant_type=refresh_token&refresh_token=" + auth.refresh_token,
                headers: {
                    'Authorization': 'Bearer ' + auth.access_token
                }
            }).then(function (response) {
                console.log("new access token is " + response.access_token);
                var now = (new Date()).getTime();
                var refreshToken = response.refresh_token || auth.refresh_token;
                var accessToken = response.access_token || auth.access_token;
                var expiresIn = response.expires_in || auth.expires_in;
                var expiresAt = new Date(now + expiresIn * 1000).getTime();
                auth.refresh_token = refreshToken;
                auth.expires_at = expiresAt;
                auth.access_token = accessToken;
                auth.expires_in = expiresIn;
                localStorage.setItem('ghost:session', JSON.stringify(auth));
                done();
            }).fail(function (response) {
                console.log(response.status, response.responseText);
                console.log(response.getAllResponseHeaders());
                console.log(response);
                var error;
                if (response.status === 401) {
                    error = new UnauthorizedError("Unauthorized");
                    try {
                        var apiError = JSON.parse(error.responseText);
                    }
                    catch (err) {
                    }
                }
                else {
                    error = new Error("Unexpected status code: " + response.status);
                }
                done(error);
            });
        };
        GhostAuthorizationManager.prototype.startAutoRefresh = function () {
            var self = this;
            console.log("starting refresh");
            if (this.timer) {
                clearTimeout(this.timer);
            }
            this.refreshToken(function (err) {
                if (err && this.onError) {
                    this.onError(err);
                }
                var auth = self.getAuthInfo();
                if (auth && auth.expires_at) {
                    var now = ((new Date()).getTime());
                    var wait = auth.expires_at - now - 500;
                    console.log(wait, auth.expires_at, now);
                    if (wait < 0)
                        wait = 0;
                    console.log("waiting " + wait + "ms for refresh");
                    self.timer = setTimeout(self.startAutoRefresh.bind(self), wait);
                }
                else {
                    console.log("no auth information polling every " + self.defaultWait + "ms");
                    self.timer = setTimeout(self.startAutoRefresh.bind(self), self.defaultWait);
                }
            });
        };
        GhostAuthorizationManager.prototype.stopAutoRefresh = function () {
            if (this.timer) {
                clearTimeout(this.timer);
            }
            delete this.timer;
        };
        return GhostAuthorizationManager;
    })();
    Retool.GhostAuthorizationManager = GhostAuthorizationManager;
})(Retool || (Retool = {}));
/*
{
   "authenticator": "simple-auth-authenticator:oauth2-password-grant",
   "access_token": "",
   "expires_in": 3600,
   "token_type": "Bearer",
   "expires_at": 1423243483309, // lasts 1 hour, Fri Feb 06 2015 09:24:43 GMT-0800 (Pacific Standard Time)
   "refresh_token": ""
}
*/
// 400 "{"errors":[{"message":"No username.","type":"BadRequestError"}]}"
function getAuth() {
    var json = localStorage.getItem('ghost:session'), auth;
    if (json) {
        try {
            auth = JSON.parse(json);
            return auth;
        }
        catch (err) {
            console.log("Error parsing ghost:session:" + err);
        }
    }
}
/*
function absolutizeExpirationTime (expiresIn) {
    if (expiresIn) {
        return new Date((new Date().getTime()) + expiresIn * 1000).getTime();
    }
}

function refreshToken() {
    console.log('refreshing');
    var auth = getAuth();

    if(!auth) {
        window.location.href = "/ghost/signin";
        return;
    }

    console.log('refreshing with token ' + auth.refresh_token);

    $.ajax({
        url: '/ghost/api/v0.1/authentication/token',
        method: 'POST',
        dataType: 'json',
        contentType: 'application/x-www-form-urlencoded',
        data: "client_id=ghost-admin&grant_type=refresh_token&refresh_token=" + auth.refresh_token,
        headers: {
            'Authorization': 'Bearer ' + auth.access_token
        }
    })
    .then(function(response) {
        console.log("new access token is " + response.access_token);
        var now = (new Date()).getTime();
        var refreshToken  = response.refresh_token || auth.refresh_token;
        var accessToken   = response.access_token || auth.access_token;
        var expiresIn     = response.expires_in || auth.expires_in;
        var expiresAt = new Date(now + expiresIn * 1000).getTime();
        auth.refresh_token = refreshToken;
        auth.expires_at = expiresAt;
        auth.access_token = accessToken;

        localStorage.setItem('ghost:session', JSON.stringify(auth));
    })
    .fail(function(response) {
        console.log(response.status, response.responseText);
        console.log(response.getAllResponseHeaders());
        console.log(response);
        if(response.status === 401) {
            window.location.href = "/ghost/signin";
            return;
        }
    })
}

*/
var authManager = new Retool.GhostAuthorizationManager({ apiBaseURL: "/ghost/api/v0.1", onError: function (err) {
    console.error("onError", err);
} });
$('#refresh').on('click', function () {
    /*
    if(!timeout) {
        console.log('starting refresh');
        timeout =
    } else {
        console.log('stopping refresh');
        delete timeout;
    }
    */
    authManager.refreshToken(function (err) {
        console.log(err);
    });
});
$('#start').on('click', function () {
    authManager.startAutoRefresh();
});
$('#stop').on('click', function () {
    authManager.stopAutoRefresh();
});
$('#api').on('click', function () {
    var auth = getAuth();
    if (!auth) {
        window.location.href = "/ghost/signin";
        return;
    }
    console.log('making api request with bear token' + auth.access_token);
    $.ajax({
        url: '/ghost/api/v0.1/posts',
        method: 'GET',
        dataType: 'json',
        contentType: 'application/x-www-form-urlencoded',
        headers: {
            'Authorization': 'Bearer ' + auth.access_token
        }
    }).then(function (data) {
        console.log(data);
    }).fail(function (response) {
        console.log(response.status, response.responseText);
        console.log(response.getAllResponseHeaders());
        console.log(response);
        if (response.status === 401) {
            console.log('logged out');
            //window.location.href = "/ghost/signin";
            return;
        }
    });
});
$('#delete').on('click', function () {
    localStorage.removeItem('ghost:session');
});
